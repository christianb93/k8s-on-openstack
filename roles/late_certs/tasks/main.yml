---
- name: Create certificate signing requests for etcd
  openssl_csr:
    path: "{{item.path}}.csr"    
    privatekey_path: "{{item.path}}.rsa"    
    common_name: "{{item.cn}}"
    basic_constraints: "CA:FALSE"
    basic_constraints_critical: true
    useCommonNameForSAN: false
    subject_alt_name: 
      - IP:{{item.ip}}
      - DNS:{{item.dns}}
    key_usage: 
        - digitalSignature
        - keyEncipherment    
    extended_key_usage:
        - clientAuth        
        - serverAuth
  loop:
    - cn: "etcd"
      path: "{{state_dir}}/k8s_certs/etcd_server"
      ip: "{{hostvars.master.mgmt_ip}}"
      dns: "master"

- name: Create certificate signing request for Kubernetes API server
  openssl_csr:
    common_name: "kube-apiserver"
    email_address: "kube_apiserver@leftasexercise.com"
    organization_name: "system:masters"
    use_common_name_for_san: false
    key_usage: 
        - digitalSignature
        - keyEncipherment
    subject_alt_name: 
        - "IP:{{hostvars.master.mgmt_ip}}"
        - "IP:{{service_cidr_gateway}}"
        - "IP:{{os.install_node.ip}}"
        - "DNS:master"
        - "IP:{{hostvars.master.floating_ip}}"
    path: "{{state_dir}}/k8s_certs/apiserver.csr"
    privatekey_path: "{{state_dir}}/k8s_certs/apiserver.rsa"


- name: Create certificate signing request for Kubelet - one for each node
  openssl_csr:
    common_name: "kubelet-server"
    use_common_name_for_san: false
    key_usage: 
      - digitalSignature
      - keyEncipherment
    subject_alt_name: 
      - "IP:{{item[1].mgmt_ip}}"
      - "DNS:{{item[0]}}"
    path: "{{state_dir}}/k8s_certs/kubelet-{{item[0]}}.csr"
    privatekey_path: "{{state_dir}}/k8s_certs/kubelet.rsa"
  loop:
    "{{ hostvars.items() | list }}"
  loop_control:
    label: "{{ item[0] }}"
  when: 
    item[1].group_names[0] == "worker_nodes"

- name: Create certificate signing requests for other control plane components
  openssl_csr:
    path: "{{item.path}}.csr"    
    privatekey_path: "{{item.path}}.rsa"    
    common_name: "{{item.cn}}"
    basic_constraints: "CA:FALSE"
    basic_constraints_critical: true
    useCommonNameForSAN: false
    subject_alt_name: 
      - IP:{{item.ip}}
    key_usage: 
        - digitalSignature
        - keyEncipherment    
    extended_key_usage:
        - serverAuth
  loop:
    - cn: "kube-controller-manager"
      path: "{{state_dir}}/k8s_certs/controller_manager"
      ip: "{{hostvars.master.mgmt_ip}}"
    - cn: "kube-scheduler"
      path: "{{state_dir}}/k8s_certs/scheduler"
      ip: "{{hostvars.master.mgmt_ip}}"

#
# Issue all certificates
#
- name: Create certificates from CSRs
  openssl_certificate:
    path: "{{item.path}}.crt"    
    csr_path: "{{item.path}}.csr"
    provider: ownca
    ownca_path: "{{state_dir}}/ca/{{item.ca}}.crt"
    ownca_privatekey_path: "{{state_dir}}/ca/{{item.ca}}.rsa"
  loop:
    - path: "{{state_dir}}/k8s_certs/etcd_server"
      ca: etcd_ca 
    - path: "{{state_dir}}/k8s_certs/apiserver"
      ca: k8s_ca 
    - path: "{{state_dir}}/k8s_certs/controller_manager"
      ca: k8s_ca
    - path: "{{state_dir}}/k8s_certs/scheduler"
      ca: k8s_ca

- name: Create certificates for Kubelet
  openssl_certificate:
    path: "{{state_dir}}/k8s_certs/kubelet-{{item[0]}}.crt"    
    csr_path: "{{state_dir}}/k8s_certs/kubelet-{{item[0]}}.csr"
    provider: ownca
    ownca_path: "{{state_dir}}/ca/k8s_ca.crt"
    ownca_privatekey_path: "{{state_dir}}/ca/k8s_ca.rsa"
  loop:
    "{{ hostvars.items() | list }}"
  loop_control:
    label: "{{ item[0] }}"
  when: 
    item[1].group_names[0] == "worker_nodes"

